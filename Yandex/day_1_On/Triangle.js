/*На координатной плоскости расположены равнобедренный прямоугольный треугольник ABC с длиной катета d и точка X.
Катеты треугольника лежат на осях координат, а вершины расположены в точках: A (0,0), B (d,0), C (0,d).
Напишите программу, которая определяет взаимное расположение точки X и треугольника.
Если точка X расположена внутри или на сторонах треугольника, выведите 0. Если же точка находится вне треугольника, выведите номер ближайшей к ней вершины.

Формат ввода
Сначала вводится натуральное число d (не превосходящее 1000), а затем координаты точки X – два целых числа из диапазона от –1000 до 1000.

Формат вывода
Если точка лежит внутри, на стороне треугольника или совпадает с одной из вершин, то выведите число 0.
Если точка лежит вне треугольника, то выведите номер вершины треугольника, к которой она расположена ближе всего (1 – к вершине A, 2 – к B, 3 – к C).
Если точка расположена на одинаковом расстоянии от двух вершин, выведите ту вершину, номер которой меньше.
*/

function checkDotPosition(num, x, y) {
  const position = x * x + y * y;
  const fromB = Math.sqrt((x - num) * (x - num) + y * y)
  const fromC = Math.sqrt((y - num) * (y - num) + x * x)
  const minDistance = Math.min(position, fromB, fromC)
  if(x >= 0 && y >= 0 && x + y <= num) {
    return 0
  } else {
     if (minDistance === position) return 1
     if (minDistance === fromB) return 2
     if (minDistance === fromC) return 3
     if (minDistance === fromC && minDistance === fromB) return 2
  }
}

console.log(checkDotPosition(3,-1,-1))